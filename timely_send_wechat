#!/usr/bin/env python3
#! -*- coding=utf-8 -*-
'it is a helper to send message to your wechat friends on time'
__author__ = 'SuSu'

import logging
import itchat
import time

class SendMaid(object):
    def __init__(self):
        itchat.auto_login(hotReload=True)
        self.__makeLogger()

    def __makeLogger(self):
        self.logger = logging.getLogger('PythonSend')
        self.logger.setLevel(logging.DEBUG)
        self.formatter = logging.Formatter("%(asctime)s - %(levelname)s - %(message)s")

        #make log to file
        self.fh = logging.FileHandler('send.log','a')
        self.fh.setLevel(logging.DEBUG)
        self.fh.setFormatter(self.formatter)
        self.logger.addHandler(self.fh)

        #make log to screen
        self.sh = logging.StreamHandler()
        self.sh.setLevel(logging.DEBUG)
        self.sh.setFormatter(self.formatter)
        self.logger.addHandler(self.sh)

    def __circle(self,send_date):
        circle_t=300
        if time.time()>send_date:
            return False
        while True:
            if time.time()+circle_t<send_date:
                time.sleep(circle_t-1)
                itchat.send(time.ctime(),toUserName='filehelper')
                self.logger.info('to avoid loging out, send to myself on '+time.ctime())
            else:
                time.sleep(send_date-time.time())
                return True

    def send(self,to,msg,date): 
    '''
    This function is based on module itchat

    The first argument is the nicknames to be sent.Generally it's a list; if there is only one person, string will also do

    The second argument is msg,which is supposed to be a string

    The third argument is the time to send.It's best a tuple made of (year,month,day,hour,minute,second).Of course,you can ignore the last few arguments. That is,if you use(2020,3), it's equal to (2020,3,1,0,0,0)
    What's more,the default time is 0-0-0 0:00:00
    '''
        if type(to)==type("abc"):
            to = [to]
        try:
            send_date=time.mktime(tuple(date)+(9-len(date))*tuple([0]))
            send_msg=str(msg)
            send_to = {}
            for t in to:
                send_to[t] = itchat.search_friends(t)[0]['UserName']
        except Exception as e:
            self.logger.error('find an error: '+str(e)+' ; fail to send')
            return
        for t in to:
            self.logger.info(t+' is to be sent "'+msg+'" on '+ time.ctime(send_date))

        #web wechat will automatically exit if not operated for some time
        #so I need to send message to myself regularly
        if self.__circle(send_date):
            for t,n in send_to.items():
                itchat.send(send_msg,toUserName=n)
                self.logger.info(t+' has been sent "'+send_msg+'" on '+time.ctime())
        else:
            self.logger.error('invalid time given and fail to send')

if __name__ == '__main__':
    me=SendMaid()
   # me.send('XXX','Test[Send From Python]',(2018,5,20,12,20))
    me.send(['XXX','XXX'],'Test[Send From Python]',(2018,5,20,12,20))
